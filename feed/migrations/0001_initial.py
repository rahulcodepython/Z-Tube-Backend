# Generated by Django 5.0.4 on 2024-04-26 10:07

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.CharField(db_index=True, editable=False, max_length=1000, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('createdAt', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='feed.comment')),
                ('uploader', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommentReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('angry', models.ManyToManyField(related_name='angry_comment', to=settings.AUTH_USER_MODEL)),
                ('care', models.ManyToManyField(related_name='care_comment', to=settings.AUTH_USER_MODEL)),
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='feed.comment')),
                ('cry', models.ManyToManyField(related_name='cry_comment', to=settings.AUTH_USER_MODEL)),
                ('heart', models.ManyToManyField(related_name='heart_comment', to=settings.AUTH_USER_MODEL)),
                ('laugh', models.ManyToManyField(related_name='laugh_comment', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(related_name='like_comment', to=settings.AUTH_USER_MODEL)),
                ('wow', models.ManyToManyField(related_name='wow_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Reaction',
                'verbose_name_plural': 'Comment Reactions',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.CharField(db_index=True, editable=False, max_length=1000, primary_key=True, serialize=False)),
                ('caption', models.TextField(default='')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=3)),
                ('media', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5000), default=list, size=None)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('createdAt', models.CharField(max_length=500)),
                ('isPublic', models.BooleanField(default=False)),
                ('isProtected', models.BooleanField(default=False)),
                ('isPersonal', models.BooleanField(default=False)),
                ('isHidden', models.BooleanField(default=False)),
                ('isPrivate', models.BooleanField(default=False)),
                ('likeNo', models.IntegerField(default=0)),
                ('viewsNo', models.IntegerField(default=0)),
                ('share', models.IntegerField(default=0)),
                ('allowComments', models.BooleanField(default=True)),
                ('commentNo', models.IntegerField(default=0)),
                ('hiddenFrom', models.ManyToManyField(blank=True, related_name='hidden_from', to=settings.AUTH_USER_MODEL)),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('visibleTo', models.ManyToManyField(blank=True, related_name='visible_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Post',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.ManyToManyField(to='feed.comment')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='feed.post')),
            ],
            options={
                'verbose_name': 'Comment Record',
                'verbose_name_plural': 'Comment Records',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='feed.post'),
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(blank=True, choices=[('like', 'Like'), ('heart', 'Heart'), ('care', 'Care'), ('laugh', 'Laugh'), ('wow', 'Wow'), ('cry', 'Cry'), ('angry', 'Angry')], default=None, max_length=100, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feed.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Reaction',
                'verbose_name_plural': 'Post Reactions',
            },
        ),
        migrations.CreateModel(
            name='PostRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posts', models.ManyToManyField(to='feed.post')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Record',
                'verbose_name_plural': 'Post Records',
            },
        ),
    ]
